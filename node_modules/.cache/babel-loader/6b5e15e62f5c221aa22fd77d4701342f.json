{"ast":null,"code":"var _jsxFileName = \"/Users/ma46029/Desktop/React_practice/Udemy/contact_manager_redux/src/components/contacts/Contacts.js\";\nimport React, { Component } from 'react';\nimport Contact from './Contact';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Contacts extends Component {\n  render() {\n    const contacts = this.state.contacts;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Contact\"), \" List\"), contacts.map(contact => React.createElement(Contact, {\n      key: contact.id,\n      contact: contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = function (state) {\n  {\n    contacts: state.contact.contacts;\n  }\n};\n\nconst mapDispatchToProps = function (dispatch) {}; // connect takes anything we want:\n// 1. mapped from Redux state to props in the component (function)\n// 2. anything (actions) we want dispatched\n\n\nexport default connect()(Contacts);","map":{"version":3,"sources":["/Users/ma46029/Desktop/React_practice/Udemy/contact_manager_redux/src/components/contacts/Contacts.js"],"names":["React","Component","Contact","connect","PropTypes","Contacts","render","contacts","state","map","contact","id","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,UADF,EAIGA,QAAQ,CAACE,GAAT,CAAaC,OAAO,IACnB,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAtB;AAA0B,MAAA,OAAO,EAAED,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJH,CADF;AAUD;;AAb8B;;AAgBjC,MAAME,eAAe,GAAG,UAASJ,KAAT,EAAe;AACrC;AAACD,IAAAA,QAAQ,EAAEC,KAAK,CAACE,OAAN,CAAcH,QAAd;AAAuB;AACnC,CAFD;;AAIA,MAAMM,kBAAkB,GAAG,UAASC,QAAT,EAAkB,CAE5C,CAFD,C,CAGA;AACA;AACA;;;AACA,eAAeX,OAAO,GAAGE,QAAH,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport Contact from './Contact';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Contacts extends Component {\n  render() {\n    const { contacts } = this.state;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = function(state){\n  {contacts: state.contact.contacts}\n};\n\nconst mapDispatchToProps = function(dispatch){\n\n}\n// connect takes anything we want:\n// 1. mapped from Redux state to props in the component (function)\n// 2. anything (actions) we want dispatched\nexport default connect()(Contacts);\n"]},"metadata":{},"sourceType":"module"}